==36840== Memcheck, a memory error detector
==36840== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==36840== Using Valgrind-3.18.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==36840== Command: ./main factorial
==36840== Parent PID: 666
==36840== 
==36840== Conditional jump or move depends on uninitialised value(s)
==36840==    at 0x100613108: _platform_memchr$VARIANT$Base (in /usr/lib/system/libsystem_platform.dylib)
==36840==    by 0x1003BC7B4: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==36840==    by 0x1003C4CCB: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==36840==    by 0x1003E9AD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==36840==    by 0x1003C22B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==36840==    by 0x1003BB15C: fprintf (in /usr/lib/system/libsystem_c.dylib)
==36840==    by 0x1000031D0: output (output.c:31)
==36840==    by 0x100001FB5: main (emulate.c:67)
==36840== 
==36840== 
==36840== HEAP SUMMARY:
==36840==     in use at exit: 13,925 bytes in 161 blocks
==36840==   total heap usage: 182 allocs, 21 frees, 92,569 bytes allocated
==36840== 
==36840== 2,048 bytes in 1 blocks are still reachable in loss record 34 of 36
==36840==    at 0x100123545: malloc (in /usr/local/Cellar/valgrind/HEAD-eec4cf7/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==36840==    by 0x100705079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x10070500D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x100708EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006F6D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006EC835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006FF07C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006FEB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006FEB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006FEB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006FEB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==36840==    by 0x1006EAA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==36840== 
==36840== LEAK SUMMARY:
==36840==    definitely lost: 0 bytes in 0 blocks
==36840==    indirectly lost: 0 bytes in 0 blocks
==36840==      possibly lost: 0 bytes in 0 blocks
==36840==    still reachable: 2,048 bytes in 1 blocks
==36840==         suppressed: 11,877 bytes in 160 blocks
==36840== 
==36840== Use --track-origins=yes to see where uninitialised values come from
==36840== For lists of detected and suppressed errors, rerun with: -s
==36840== ERROR SUMMARY: 35 errors from 1 contexts (suppressed: 7 from 7)
